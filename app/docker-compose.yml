version: "3"
services:
  webserver:
    container_name: webserver
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./webserver/strapi.conf:/etc/nginx/conf.d/default.conf
    networks:
      - strapi
    depends_on:
      - strapi

  strapi:
    container_name: strapi
    image: miladbeigi/strapiv4:${TAG}
    restart: always
    env_file: .env
    environment:
      DATABASE_HOST: strapiDB
      DATABASE_CLIENT: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: mydb
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: PRODUCTION
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    image: postgres:12.0-alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: mydb
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
